package main
/*
变量是程序的基本组成单位
不论是使用那种高级程序语言编写程序，变量都是其最基本的组成单位

概念：
变量相当于内存中的一个数据存储空间的表示，你可以把变量看做是一个房间的门牌号，通过门牌号我们可以找到房间，
同样道理，通过变量名可以访问到变量值。
变量使用的基本步骤
1.声明变量
2.赋值
3.使用

变量快速入门例子
 */

import "fmt"

func main()  {
	//定义变量
	var i int
	// 给i赋值
	i = 10
	//使用变量
	fmt.Println("i=",i)
	a := 10
	b := 3.1415926
	fmt.Printf("==%5d\n",a)
	//%.3表示小数点后面保留三位小数，会对第四为四舍五入
	//占位符 %d 整数  %f 浮点数  %t 布尔值  %s 字符串   %c 字符类型  %T 变量类型
	// %% 百分号信息  %b 输出二进制  %o 输出八进制 %x 十六进制 a-f %X 十六进制 A-F
	fmt.Printf("%.3f\n",b)
	a1 := 123 //十进制
	b1 := 0123 //八进制 以0开头的是八进制
	c := 0x123 //十六进制 以0x开头的是十六进制
	fmt.Printf("二进制为: %b\n",a1)
	fmt.Printf("二进制为: %o\n",b1)
	fmt.Printf("二进制为: %x\n",c)
	fmt.Printf("b1的类型为: %T\n",b1)
}
/*
变量使用的注意事项
1.变量表示内存中的一个存储区域
2.该区域有自己的名称（变量名）和类型（数据类型）
3.Golang变量使用有三种方式
  3.1 指定变量类型，声明后若不赋值，使用默认值
  3.2 根据值自行判断变量类型（类型推导）
  3.3 省略var，注意 := 左侧的变量不应该是已经声明过的，否则会导致编译错误
4.多变量声明
  在编程中，有时我们需要一次性声明多个变量，Golang也提供这样的语法
5.该区域的数据值可以在同一个类型范围内不断比变化
6.变量在同一个作用域（在一个函数或者是在一个代码块中）不能重名
7.变量=变量名+值+数据类型 变量三要素
8.Golang的变量如果没有赋初值，编译器会使用默认值，比如int默认为0 string为空串，浮点数也为0
如何一次性声明多个全局变量【在go中，函数外部定义的变量就是全局变量】

 */
